# Alert Rules for Interviews.tv Production Monitoring
groups:
  # Application Health Alerts
  - name: application.health
    rules:
    - alert: ApplicationDown
      expr: up{job="interviews-tv-api"} == 0
      for: 1m
      labels:
        severity: critical
        service: api
      annotations:
        summary: "Interviews.tv API is down"
        description: "The Interviews.tv API has been down for more than 1 minute."
        runbook_url: "https://runbooks.interviews.tv/api-down"

    - alert: HighErrorRate
      expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.05
      for: 5m
      labels:
        severity: warning
        service: api
      annotations:
        summary: "High error rate detected"
        description: "Error rate is {{ $value | humanizePercentage }} for the last 5 minutes."

    - alert: CriticalErrorRate
      expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.10
      for: 2m
      labels:
        severity: critical
        service: api
      annotations:
        summary: "Critical error rate detected"
        description: "Error rate is {{ $value | humanizePercentage }} for the last 5 minutes."

    - alert: SlowResponseTime
      expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
      for: 5m
      labels:
        severity: warning
        service: api
      annotations:
        summary: "Slow response times detected"
        description: "95th percentile response time is {{ $value }}s for the last 5 minutes."

  # Infrastructure Alerts
  - name: infrastructure.health
    rules:
    - alert: HighCPUUsage
      expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
      for: 5m
      labels:
        severity: warning
        component: cpu
      annotations:
        summary: "High CPU usage detected"
        description: "CPU usage is {{ $value }}% on {{ $labels.instance }}"

    - alert: CriticalCPUUsage
      expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 95
      for: 2m
      labels:
        severity: critical
        component: cpu
      annotations:
        summary: "Critical CPU usage detected"
        description: "CPU usage is {{ $value }}% on {{ $labels.instance }}"

    - alert: HighMemoryUsage
      expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 85
      for: 5m
      labels:
        severity: warning
        component: memory
      annotations:
        summary: "High memory usage detected"
        description: "Memory usage is {{ $value }}% on {{ $labels.instance }}"

    - alert: CriticalMemoryUsage
      expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 95
      for: 2m
      labels:
        severity: critical
        component: memory
      annotations:
        summary: "Critical memory usage detected"
        description: "Memory usage is {{ $value }}% on {{ $labels.instance }}"

    - alert: DiskSpaceWarning
      expr: (node_filesystem_size_bytes - node_filesystem_free_bytes) / node_filesystem_size_bytes * 100 > 80
      for: 5m
      labels:
        severity: warning
        component: disk
      annotations:
        summary: "Disk space running low"
        description: "Disk usage is {{ $value }}% on {{ $labels.instance }} ({{ $labels.mountpoint }})"

    - alert: DiskSpaceCritical
      expr: (node_filesystem_size_bytes - node_filesystem_free_bytes) / node_filesystem_size_bytes * 100 > 90
      for: 2m
      labels:
        severity: critical
        component: disk
      annotations:
        summary: "Critical disk space"
        description: "Disk usage is {{ $value }}% on {{ $labels.instance }} ({{ $labels.mountpoint }})"

  # Database Alerts
  - name: database.health
    rules:
    - alert: MySQLDown
      expr: mysql_up == 0
      for: 1m
      labels:
        severity: critical
        service: mysql
      annotations:
        summary: "MySQL database is down"
        description: "MySQL database has been down for more than 1 minute."

    - alert: MySQLSlowQueries
      expr: rate(mysql_global_status_slow_queries[5m]) > 10
      for: 5m
      labels:
        severity: warning
        service: mysql
      annotations:
        summary: "High number of slow MySQL queries"
        description: "{{ $value }} slow queries per second for the last 5 minutes."

    - alert: MySQLConnections
      expr: mysql_global_status_threads_connected / mysql_global_variables_max_connections * 100 > 80
      for: 5m
      labels:
        severity: warning
        service: mysql
      annotations:
        summary: "High MySQL connection usage"
        description: "MySQL connection usage is {{ $value }}%"

    - alert: RedisDown
      expr: redis_up == 0
      for: 1m
      labels:
        severity: critical
        service: redis
      annotations:
        summary: "Redis is down"
        description: "Redis has been down for more than 1 minute."

    - alert: RedisMemoryUsage
      expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 > 90
      for: 5m
      labels:
        severity: warning
        service: redis
      annotations:
        summary: "High Redis memory usage"
        description: "Redis memory usage is {{ $value }}%"

  # Kubernetes Alerts
  - name: kubernetes.health
    rules:
    - alert: KubernetesPodCrashLooping
      expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
      for: 5m
      labels:
        severity: warning
        component: kubernetes
      annotations:
        summary: "Pod is crash looping"
        description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is crash looping."

    - alert: KubernetesPodNotReady
      expr: kube_pod_status_ready{condition="false"} == 1
      for: 5m
      labels:
        severity: warning
        component: kubernetes
      annotations:
        summary: "Pod not ready"
        description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been not ready for more than 5 minutes."

    - alert: KubernetesNodeNotReady
      expr: kube_node_status_condition{condition="Ready",status="true"} == 0
      for: 5m
      labels:
        severity: critical
        component: kubernetes
      annotations:
        summary: "Kubernetes node not ready"
        description: "Node {{ $labels.node }} has been not ready for more than 5 minutes."

  # Security Alerts
  - name: security.alerts
    rules:
    - alert: HighFailedLoginAttempts
      expr: rate(failed_login_attempts_total[5m]) > 10
      for: 2m
      labels:
        severity: warning
        component: security
      annotations:
        summary: "High number of failed login attempts"
        description: "{{ $value }} failed login attempts per second for the last 5 minutes."

    - alert: SuspiciousActivity
      expr: rate(suspicious_requests_total[5m]) > 5
      for: 2m
      labels:
        severity: warning
        component: security
      annotations:
        summary: "Suspicious activity detected"
        description: "{{ $value }} suspicious requests per second for the last 5 minutes."

    - alert: RateLimitExceeded
      expr: rate(rate_limit_exceeded_total[5m]) > 50
      for: 2m
      labels:
        severity: warning
        component: security
      annotations:
        summary: "Rate limit frequently exceeded"
        description: "Rate limit exceeded {{ $value }} times per second for the last 5 minutes."

  # Business Metrics Alerts
  - name: business.metrics
    rules:
    - alert: LowUserRegistrations
      expr: rate(user_registrations_total[1h]) < 0.1
      for: 30m
      labels:
        severity: warning
        component: business
      annotations:
        summary: "Low user registration rate"
        description: "User registration rate is {{ $value }} per hour for the last 30 minutes."

    - alert: HighInterviewCreationFailures
      expr: rate(interview_creation_failures_total[5m]) / rate(interview_creation_attempts_total[5m]) > 0.05
      for: 5m
      labels:
        severity: warning
        component: business
      annotations:
        summary: "High interview creation failure rate"
        description: "Interview creation failure rate is {{ $value | humanizePercentage }}."

  # External Service Alerts
  - name: external.services
    rules:
    - alert: WebsiteDown
      expr: probe_success{job="blackbox-http"} == 0
      for: 2m
      labels:
        severity: critical
        component: external
      annotations:
        summary: "Website is down"
        description: "{{ $labels.instance }} has been down for more than 2 minutes."

    - alert: SSLCertificateExpiring
      expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 7
      for: 1h
      labels:
        severity: warning
        component: ssl
      annotations:
        summary: "SSL certificate expiring soon"
        description: "SSL certificate for {{ $labels.instance }} expires in {{ $value | humanizeDuration }}."

    - alert: SSLCertificateExpired
      expr: probe_ssl_earliest_cert_expiry - time() < 0
      for: 1m
      labels:
        severity: critical
        component: ssl
      annotations:
        summary: "SSL certificate expired"
        description: "SSL certificate for {{ $labels.instance }} has expired."
