# Nginx Configuration for Interviews.tv
# Production-ready configuration with security headers and clean URLs

server {
    listen 80;
    listen [::]:80;
    server_name interviewstv.com www.interviewstv.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name interviewstv.com www.interviewstv.com;
    
    # SSL Configuration (update paths as needed)
    ssl_certificate /path/to/ssl/certificate.crt;
    ssl_certificate_key /path/to/ssl/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; media-src 'self' https:; object-src 'none'; frame-src 'none';" always;
    
    # Document root
    root /var/www/interviewstv/web/dist;
    index index.html index.php;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;
        access_log off;
    }
    
    # API routes with rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "$http_origin" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-CSRF-Token" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "$http_origin" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-CSRF-Token" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        try_files $uri $uri/ /api/index.php?$query_string;
    }
    
    # Login endpoint with stricter rate limiting
    location /api/auth/login {
        limit_req zone=login burst=3 nodelay;
        try_files $uri $uri/ /api/index.php?$query_string;
    }
    
    # File upload endpoints with rate limiting
    location ~ ^/api/(upload|media)/ {
        limit_req zone=upload burst=5 nodelay;
        client_max_body_size 50M;
        try_files $uri $uri/ /api/index.php?$query_string;
    }
    
    # PHP processing for API
    location ~ ^/api/.*\.php$ {
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Security headers for PHP responses
        fastcgi_hide_header X-Powered-By;
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # Clean URLs for frontend routes
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # SEO-friendly interview URLs
    location ~ ^/interview/([a-z0-9-]+)/?$ {
        try_files $uri $uri/ /index.html;
    }
    
    # SEO-friendly profile URLs
    location ~ ^/profile/([a-zA-Z0-9._-]+)/?$ {
        try_files $uri $uri/ /index.html;
    }
    
    # SEO-friendly business URLs
    location ~ ^/business/([a-z0-9-]+)/?$ {
        try_files $uri $uri/ /index.html;
    }
    
    # SEO-friendly category URLs
    location ~ ^/category/([a-z0-9-]+)/?$ {
        try_files $uri $uri/ /index.html;
    }
    
    # Sitemap and robots.txt
    location = /sitemap.xml {
        try_files $uri /api/sitemap.php;
    }
    
    location = /robots.txt {
        try_files $uri /api/robots.php;
    }
    
    # Block access to sensitive files
    location ~ /\.(env|git|svn|htaccess|htpasswd) {
        deny all;
        return 404;
    }
    
    location ~ /(config|vendor|storage|database|tests)/ {
        deny all;
        return 404;
    }
    
    location ~ \.(sql|bak|old|tmp|log)$ {
        deny all;
        return 404;
    }
    
    # Block common exploit attempts
    location ~ /(wp-admin|wp-login|phpmyadmin|admin|administrator) {
        return 444;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        try_files $uri /api/404.php;
    }
    
    location = /50x.html {
        try_files $uri /api/error.php;
    }
    
    # Logging
    access_log /var/log/nginx/interviewstv_access.log combined;
    error_log /var/log/nginx/interviewstv_error.log warn;
    
    # Additional security measures
    server_tokens off;
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65s;
    send_timeout 60s;
    
    # Prevent buffer overflow attacks
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
}

# Rate limiting configuration
limit_req_status 429;
limit_conn_status 429;

# Upstream for load balancing (if needed)
upstream php_backend {
    server unix:/var/run/php/php8.2-fpm.sock;
    # Add more servers for load balancing:
    # server 127.0.0.1:9001;
    # server 127.0.0.1:9002;
}

# HTTP/2 Push for critical resources (optional)
# location = /index.html {
#     http2_push /css/app.css;
#     http2_push /js/app.js;
# }
